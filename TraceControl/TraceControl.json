{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/Thunder/master/Tools/JsonGenerator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "TraceControl API",
        "class": "TraceControl",
        "description": "The `TraceControl` plugin provides ability to disable/enable trace output an set its verbosity level."
    },
    "common": {
        "errors": {
            "general": {
                "code": 1,
                "message": "ERROR_GENERAL"
            },
            "unavailable": {
                "code": 2,
                "message": "ERROR_UNAVAILABLE"
            },
            "asyncfailed": {
                "code": 3,
                "message": "ERROR_ASYNC_FAILED"
            },
            "asyncaborted": {
                "code": 4,
                "message": "ERROR_ASYNC_ABORTED"
            },
            "illegalstate": {
                "code": 5,
                "message": "ERROR_ILLEGAL_STATE"
            },
            "openingfailed": {
                "code": 6,
                "message": "ERROR_OPENING_FAILED"
            },
            "acceptfailed": {
                "code": 7,
                "message": "ERROR_ACCEPT_FAILED"
            },
            "pendingshutdown": {
                "code": 8,
                "message": "ERROR_PENDING_SHUTDOWN"
            },
            "alreadyconnected": {
                "code": 9,
                "message": "ERROR_ALREADY_CONNECTED"
            },
            "connectionclosed": {
                "code": 10,
                "message": "ERROR_CONNECTION_CLOSED"
            },
            "timedout": {
                "code": 11,
                "message": "ERROR_TIMEDOUT"
            },
            "inprogress": {
                "code": 12,
                "message": "ERROR_INPROGRESS",
                "description": "Operation in progress"
            },
            "couldnotsetaddress": {
                "code": 13,
                "message": "ERROR_COULD_NOT_SET_ADDRESS"
            },
            "incorrecthash": {
                "code": 14,
                "message": "ERROR_INCORRECT_HASH",
                "description": "Incorrect hash given"
            },
            "incorrecturl": {
                "code": 15,
                "message": "ERROR_INCORRECT_URL",
                "description": "Incorrect URL given"
            },
            "invalidinputlength": {
                "code": 16,
                "message": "ERROR_INVALID_INPUT_LENGTH"
            },
            "destructionsucceeded": {
                "code": 17,
                "message": "ERROR_DESTRUCTION_SUCCEEDED"
            },
            "destructionfailed": {
                "code": 18,
                "message": "ERROR_DESTRUCTION_FAILED"
            },
            "closingfailed": {
                "code": 19,
                "message": "ERROR_CLOSING_FAILED"
            },
            "processterminated": {
                "code": 20,
                "message": "ERROR_PROCESS_TERMINATED"
            },
            "processkilled": {
                "code": 21,
                "message": "ERROR_PROCESS_KILLED"
            },
            "unknownkey": {
                "code": 22,
                "message": "ERROR_UNKNOWN_KEY"
            },
            "incompleteconfig": {
                "code": 23,
                "message": "ERROR_INCOMPLETE_CONFIG"
            },
            "privilegedrequest": {
                "code": 24,
                "message": "ERROR_PRIVILEGED_REQUEST"
            },
            "rpccallfailed": {
                "code": 25,
                "message": "ERROR_RPC_CALL_FAILED"
            },
            "unreachablenetwork": {
                "code": 26,
                "message": "ERROR_UNREACHABLE_NETWORK"
            },
            "requestsubmitted": {
                "code": 27,
                "message": "ERROR_REQUEST_SUBMITTED"
            },
            "unknowntable": {
                "code": 28,
                "message": "ERROR_UNKNOWN_TABLE"
            },
            "duplicatekey": {
                "code": 29,
                "message": "ERROR_DUPLICATE_KEY"
            },
            "badrequest": {
                "code": 30,
                "message": "ERROR_BAD_REQUEST"
            },
            "pendingconditions": {
                "code": 31,
                "message": "ERROR_PENDING_CONDITIONS"
            },
            "surfaceunavailable": {
                "code": 32,
                "message": "ERROR_SURFACE_UNAVAILABLE"
            },
            "playerunavailable": {
                "code": 33,
                "message": "ERROR_PLAYER_UNAVAILABLE"
            },
            "firstresourcenotfound": {
                "code": 34,
                "message": "ERROR_FIRST_RESOURCE_NOT_FOUND"
            },
            "secondsourcenotfound": {
                "code": 35,
                "message": "ERROR_SECOND_RESOURCE_NOT_FOUND"
            },
            "alreadyreleased": {
                "code": 36,
                "message": "ERROR_ALREADY_RELEASED"
            },
            "negtiveacknowledge": {
                "code": 37,
                "message": "ERROR_NEGATIVE_ACKNOWLEDGE"
            },
            "invalidsignature": {
                "code": 38,
                "message": "ERROR_INVALID_SIGNATURE"
            },
            "readerror": {
                "code": 39,
                "message": "ERROR_READ_ERROR"
            },
            "writeerror": {
                "code": 40,
                "message": "ERROR_WRITE_ERROR"
            },
            "invaliddesignator": {
                "code": 41,
                "message": "ERROR_INVALID_DESIGNATOR"
            },
            "unauthenticated": {
                "code": 42,
                "message": "ERROR_UNAUTHENTICATED"
            },
            "notexist": {
                "code": 43,
                "message": "ERROR_NOT_EXIST"
            },
            "notsupported": {
                "code": 44,
                "message": "ERROR_NOT_SUPPORTED"
            }
        },
        "results": {
            "void": {
                "type": "null",
                "default": null,
                "description": "Always null"
            }
        }
    },
    "definitions": {
        "module": {
            "description": "The module name. If the module name is not specified then, it returns all modules",
            "type": "string",
            "example": "Plugin_Monitor"
        },
        "category": {
            "description": "The category name. If the category name is not specified then, it returns all categories",
            "type": "string",
            "example": "Information"
        },
        "state": {
            "description": "The state value",
            "type": "string",
            "enum": [
                "enabled",
                "disabled",
                "tristated"
            ],
            "example": "disabled"
        },
        "trace": {
            "description": "Trace information",
            "type": "object",
            "properties": {
                "module": {
                    "$ref": "#/definitions/module"
                },
                "category": {
                    "$ref": "#/definitions/category"
                },
                "state": {
                    "$ref": "#/definitions/state"
                }
            },
            "required": [
              "module",
              "category",
              "state"
            ]
        },
        "result": {
            "type":"object",
            "properties": {
                "success": {
                    "$ref": "#/definitions/success"
                }
            },
            "required": [
                "success"
            ]
        },
        "success": {
            "summary": "Whether the request succeeded",
            "type": "boolean",
            "example": "true"
        }
    },
    "methods": {
        "set": {
            "summary": "Sets traces. Enables or disables all or select category traces for the specified module. \n  \n### Events \n\n No events",
            "params": {
                "$ref": "#/definitions/trace"
            },
            "result": {
                "$ref": "#/common/results/void"
            }
        },
        "status":{
            "summary": "Retrieves the actual trace status information for the specified module and category. If the category or module is not specified then, all the information is returned. If both module and category are not specified then, the result is empty. It retrieves the details about the console status and remote address (port and binding), if these are configured. \n \n### Events\n \n No Events",
            "params": {
                "type": "object",
                "properties": {
                    "module": {
                        "$ref": "#/definitions/module"
                    },
                    "category": {
                        "$ref": "#/definitions/category"
                    }
                },
                "required": [
                    "module",
                    "category"
                ]
            },
            "result": {
                "type": "object",
                "properties": {
                    "console": {
                        "description": "`true` if a console, otherwise `false`",
                        "type": "boolean",
                        "example": false
                    },
                    "remote": {
                        "description": "The remote address",
                        "type": "object",
                        "properties": {
                            "port": {
                                "description": "The port number",
                                "type": "number",
                                "size": 16,
                                "example": 2200
                            },
                            "binding": {
                                "description": "The binding address",
                                "type": "string",
                                "example": "0.0.0.0"
                            }
                        },
                        "required": [
                            "port",
                            "binding"
                        ]
                    },
                    "settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/trace"
                        }
                    }
                },
                "required": [
                    "console",
                    "remote",
                    "settings"
                ]
            }
        }
    }
}